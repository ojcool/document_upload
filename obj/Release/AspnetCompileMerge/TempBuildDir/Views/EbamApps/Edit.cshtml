@model AdminLogin.Models.EbamApp

@{
    ViewBag.Title = "Edit Application";
    ViewBag.SubTitle = "Ebams";

}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@using (Html.BeginForm("Edit", "EbamApps", null, FormMethod.Post, new { enctype = "multipart/form-data" }))

{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
     
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        <div class="col-md-6">
            <div class="box-body">
                <div class="form-group">
                    @Html.LabelFor(model => model.AppName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.AppName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AppName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Usage, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Usage, 3, 40, htmlAttributes: new { style = "width: 100%; max-width: 100%;" })

                        @Html.ValidationMessageFor(model => model.Usage, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Host_IP, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Host_IP, 8, 40, htmlAttributes: new { style = "width: 100%; max-width: 100%;" })
                        @Html.ValidationMessageFor(model => model.Host_IP, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Public_IP, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Public_IP, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Public_IP, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DB_name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DB_name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DB_name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DB_IP, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DB_IP, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DB_IP, "", new { @class = "text-danger" })
                    </div>
                </div>

               

            </div>
        </div>
        <div class="col-md-6">
            <div class="box-body">
                <div class="form-group">
                    @Html.LabelFor(model => model.DB_Type, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.DB_Type, new SelectList(
                                                    new List<Object>{
                                                         new { value = "Oracel" , text = "Oracel"  },
                                                         new { value = "SQL Server" , text = "SQL Server" }
                                                      },
                                                    "value",
                                                    "text",
                                                      2), new { style = "width: 100%; max-width: 100%;" })
                        @Html.ValidationMessageFor(model => model.DB_Type, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.DB_user, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DB_user, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DB_user, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Server_name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Server_name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Server_name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.OS_Type, new SelectList(
                                                     new List<Object>{
                                                             new { value = "In-House" , text = "In - House"  },
                                                             new { value = "Vendor" , text = "Vendor" },
                                                             new { value = "3rd Party" , text = "3rd Party" }
                                                       },
                                                     "value",
                                                     "text",
                                                       2), new { style = "width: 100%; max-width: 100%;" })
                        @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.OS_Type, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.EditorFor(model => model.OS_Type, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.DropDownListFor(model => model.OS_Type, new SelectList(
                                                   new List<Object>{
                                                        new { value = "Window Server" , text = "Window Server"  },
                                                        new { value = "Linux" , text = "Linux" }
                                                     },
                                                   "value",
                                                   "text",
                                                     2), new { style = "width: 100%; max-width: 100%;" })
                        @Html.ValidationMessageFor(model => model.OS_Type, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.DropDownListFor(model => model.Status, new SelectList(
                                              new List<Object>{
                                                   new { value = "In-Use " , text = "In - Use"  },
                                                   new { value = "Not In-Use" , text = "NOT In-Use" }
                                                },
                                              "value",
                                              "text",
                                               2), new { style = "width: 100%; max-width: 100%;" })
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SupportId, "App Manager", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("SupportId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SupportId, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
            @Html.LabelFor(model => model.FileId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FileId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FileId, "", new { @class = "text-danger" })
            </div>
        </div>*@
                <div class="form-group">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.FileId, htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>
                    <div class="editor-field">
                        <input type="file" name="file" multiple="multiple" />
                        <br />
                        <br />
                        <ul class="attachment">
                            @foreach (var item in Model.EbamSupportFiles)
                            {
                                <li>
                                    <a class="title" href="/EbamApps/Download/?p=@(item.Id + item.Extension)&d=@item.FileName">@item.FileName</a>
                                    @*<a href = "javascript:void(0);" data-id="@item.Id" class="deleteItem">X</a>*@
                                </li>
                            }
                        </ul>
                    </div>

                </div>

            </div>
        </div>
        <div class="box-footer">
            <button type="submit" class="btn btn-default">Cancel</button>
            <button type="submit" class="btn btn-info">Update Record</button>
        </div>
    </div>

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
